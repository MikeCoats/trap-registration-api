name: Lint, Test, Build and Push on Branches

on:
  push:
    branches: [ main, develop ]

env:
  ECR_REPOSITORY: naturescot/trap-registration-api
  TR_NOTIFY_API_KEY: ${{ secrets.TR_NOTIFY_LIVE_KEY }}
  JWT_KEY_GPG_PASSPHRASE: ${{ secrets.TR_JWT_KEY_GPG_PASSPHRASE }}

jobs:

  lint_and_test:
    name: Lint and Test the Project
    runs-on: ubuntu-20.04
    steps:

    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '12'

    - name: Install all the pre-requisites
      run: npm ci

    - name: Check the linter
      run: npm run lint

    - name: Decrypt the secrets
      run: |
        chmod +x ./decrypt_secrets.sh
        ./decrypt_secrets.sh

    - name: Check the pre-start operations
      run: npm run prestart

    - name: Check the integration tests
      run: npm run test

  build_and_push:
    name: Build and Push the Image
    runs-on: ubuntu-20.04
    steps:

    - uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Decrypt the secrets
      run: |
        chmod +x ./decrypt_secrets.sh
        ./decrypt_secrets.sh

    - name: Build and tag the Docker Image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_REF##*/} .

    - name: Push the Docker Image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: docker push $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_REF##*/}

    - name: Logout of Amazon ECR
      if: always()
      run: docker logout ${{ steps.login-ecr.outputs.registry }}
